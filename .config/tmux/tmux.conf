#------------------------------------------------------------------------------
# TMUX CONFIGURATION FILE
#
# Usage: Place this file at ~/.tmux.conf and reload with PREFIX r
# This configuration provides a customized tmux experience with intuitive 
# keybindings, visual enhancements, and productivity features.
#------------------------------------------------------------------------------


#------------------------------------------------------------------------------
# CORE SETTINGS
# These are foundational settings that affect the overall tmux experience
#------------------------------------------------------------------------------

# Set Ctrl+Space as the prefix key (more ergonomic than the default Ctrl+b)
# All tmux commands are triggered by this prefix followed by another key
unbind C-b
set-option -g prefix C-a

# Start window and pane numbering at 1 instead of 0 for easier keyboard access
# This is more intuitive as keyboard number keys start with 1, not 0
set -g base-index 1
set-window-option -g pane-base-index 1

# Enable mouse for selecting/resizing panes, scrolling, and selecting windows
# Allows for intuitive mouse interactions with tmux session elements
set -g mouse on

# Configure terminal for full color support via tmux-sensible plugin for initial 256 colors
# But keep an additional override here
# These settings ensure proper color rendering in terminal applications
set -ga terminal-overrides ",screen-256color*:Tc"

#------------------------------------------------------------------------------
# INTUITIVE KEYBINDINGS
# Custom keybindings designed for efficiency and ease of use
#------------------------------------------------------------------------------

# Window Management
# Create a new window with the current directory path
# This preserves your current working directory when creating new windows
bind N new-window -c "#{pane_current_path}"
# Display interactive window selection menu
# Provides a visual list of all windows for quick navigation
bind w choose-window
# Close/kill the current window
# Quickly terminate the current window and all its panes
bind q kill-window

# Pane Splitting
# Split window vertically (creating side-by-side panes)
# Use 'v' for vertical split which matches visual orientation ('v'ertical ‚Üí side-by-side)
bind v split-window -h -c "#{pane_current_path}"
# Split window horizontally (creating top and bottom panes)
# Use 'h' for horizontal split which matches visual orientation ('h'orizontal ‚Üí top-bottom)
bind h split-window -v -c "#{pane_current_path}"

# Cheatsheet window
bind-key -r i run-shell "tmux neww ~/.config/tmux/tmux-cht.sh"

# Pane Navigation
# Navigate between panes using arrow keys
# Intuitive directional movement between adjacent panes
bind Left select-pane -L   # Move to left pane
bind Right select-pane -R  # Move to right pane
bind Up select-pane -U     # Move to pane above
bind Down select-pane -D   # Move to pane below

# Pane Resizing
# Resize panes using Shift+Arrow without prefix key
# These bindings work directly without needing to press the prefix first
bind -n S-Left resize-pane -L 2   # Increase pane size to the left
bind -n S-Right resize-pane -R 2  # Increase pane size to the right
bind -n S-Up resize-pane -U 2     # Increase pane size upward
bind -n S-Down resize-pane -D 2   # Increase pane size downward

# Session Management
# Display interactive session selection menu
# Shows a list of all active sessions for quick switching
bind s choose-session
# Detach from current session (can be reattached with 'tmux attach')
# Keeps the session running in the background - useful for remote work
bind d detach

# Help System
# Display custom cheatsheet in a popup window
# Creates a temporary overlay with your personal tmux shortcuts and notes
bind ? display-popup -E "cat ~/.tmux-cheatsheet.txt || echo 'Create ~/.tmux-cheatsheet.txt with your shortcuts!'"

# Copy Mode (macOS specific)
# Use 'y' in copy mode to copy selection to macOS clipboard
# Integrates tmux copy operations with the system clipboard for seamless pasting
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'pbcopy'

#------------------------------------------------------------------------------
# STATUS BAR CONFIGURATION
# Visual and informational elements displayed at the bottom of the terminal
#------------------------------------------------------------------------------

# Enable status bar and position it at the bottom of the terminal
# The status bar provides session information and window/pane context
set -g status on
set -g status-position bottom

# Set status bar colors (black background with white text)
# Creates a clean, readable status bar with good contrast
set -g status-style bg=black,fg=white

# Configure window list appearance in status bar
# Format for normal windows: index:name
set -g window-status-format "#I:#W"
# Format for current/active window: index:name (highlighted)
set -g window-status-current-format "#I:#W"
# Highlight the current window with green background
# Makes it easy to identify which window is currently active
set -g window-status-current-style bg=green,fg=black,bold

# Configure left side of status bar to show visual indicator when prefix is active 
# Provides immediate feedback when prefix key is pressed to indicate command mode
set -g status-left "#{?client_prefix,[Keys: n=next N=new v=vsplit h=hsplit tab=sidebar],#[fg=yellow][#S]} "
set -g status-left-length 80

# Configure right side of status bar to show time and zoom indicator
# Shows a magnifying glass icon when a pane is zoomed
# Provides current time and visual feedback about zoom state
set -g status-right "#{?window_zoomed_flag,üîç ,}%H:%M"
set -g status-right-length 40

# Show a menu of common commands when prefix is pressed twice
# Provides a visual command palette for quick access to frequently used commands
# Organized into logical sections with separators for better readability
bind C-a display-menu -T "Tmux Commands" \
  "Previous Window" p "previous-window" \
  "Next Window" n "next-window" \
  "New Window" N "new-window -c '#{pane_current_path}'" \
  "Last Window" a "last-window" \
  "Split Vertical" v "split-window -h -c '#{pane_current_path}'" \
  "Split Horizontal" h "split-window -v -c '#{pane_current_path}'" \
  "Kill Window" q "kill-window" \
  "" \
  "Choose Window" w "choose-window" \
  "Choose Session" s "choose-session" \
  "Detach" d "detach-client" \
  "" \
  "Reload Config" R "source-file ~/.tmux.conf" \
  "Help" ? "display-popup -E 'cat ~/.tmux-cheatsheet.txt || echo Create ~/.tmux-cheatsheet.txt'"


## Better scrolling behavior
# From: https://www.reddit.com/r/tmux/comments/tqmyzm/snippet_better_scrolling/
# Improves mouse wheel scrolling to be more intuitive in different contexts
# When in alternate screen mode (e.g., less, vim, etc.):
  bind-key -n WheelUpPane if-shell -F "#{alternate_on}" \
    "if-shell -F \"#{mouse_any_flag}\" \
      \"send-key -M\" \
      \"send-key -N 3 Up\"" \
    "copy-mode -e ; send-key -M"
  bind-key -n WheelDownPane if-shell -F "#{alternate_on}" \
    "if-shell -F \"#{mouse_any_flag}\" \
      \"send-key -M\" \
      \"send-key -N 3 Down\"" \
    "if-shell -F \"#{pane_in_mode}\" \
      \"send-key -M\""
  # PageUp key behavior: If in alternate screen, send PageUp, otherwise enter copy mode
  bind-key -n PageUp if-shell -F "#{alternate_on}" \
    "send-key PageUp" \
    "if-shell -F \"#{pane_in_mode}\" \
      \"send-key PageUp\" \
      \"copy-mode -eu\""

#------------------------------------------------------------------------------
# PLUGINS
# Managed via Tmux Plugin Manager (tmp)
# @see https://github.com/tmux-plugins/tpm
#------------------------------------------------------------------------------
# List of plugins
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "tmux-plugins/tmux-sensible"

# Theme Tokyo Night from https://github.com/fabioluciano/tmux-tokyo-night
set -g @plugin "fabioluciano/tmux-tokyo-night"
### Tokyo Night Theme configuration
set -g @theme_variation 'night'
set -g @theme_transparent_status_bar 'false'
set -g @theme_plugins "datetime,weather,homebrew"
set -g @theme_plugin_weather_location "Berlin, Germany"
set -g @theme_left_separator 'ÓÇ∏'
set -g @theme_right_separator 'ÓÇ∫'

set -g @plugin "b0o/tmux-autoreload"
set -g @plugin "sainnhe/tmux-fzf"
set -g @treemux-tree-nvim-init-file "$HOME/.config/tmux/plugins/treemux/configs/treemux_init.lua"
# If you want to completely isolate the treemux's nvim config and data from your main nvim config and data, set NVIM_APPNAME.
# This will make treemux use '~/.config/nvim-treemux', '~/.local/share/nvim-treemux'
set -g @treemux-nvim-command "NVIM_APPNAME=nvim-treemux nvim"  # default is 'nvim'
# Installing nvim neotree for tmux sidebar
# I need to run ":Lazy update" from the side tree to update the neovim plugins
set -g @plugin "kiyoon/treemux"

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run "$HOME/.config/tmux/plugins/tpm/tpm"
run-shell "$HOME/.config/tmux/plugins/tmux-autoreload/tmux-autoreload.tmux"